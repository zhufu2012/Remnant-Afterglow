-ifndef(cfg_lingDiZhanBase_hrl).
-define(cfg_lingDiZhanBase_hrl, true).

-record(lingDiZhanBaseCfg, {
	%% 地图ID/副本ID
	%% （所有战区通用）
	iD,
	%% 龙柱
	%% （位置序号，龙柱ID）
	dragonPillarID,
	%% 龙柱
	%% （位置序号，龙柱ID，x坐标，z坐标，朝向）
	dragonPillarSeat,
	%% 前两次活动开启时间，特殊处理
	%% （开服第几天开第一场，开服第几天后，周几开第二场）
	%% (7,9,6）表示：
	%% 第一次开启时间为：开服第7天
	%% 第二次开启时间为：开服第9天以后的星期六开启.
	%% 从第三次开始，开启时间走周历表配置
	%% 周几：1周一，2周二，…，7周日
	%% -------------2020/9/23优化------------
	%% 改为：（开服第几天第一场，开服第几天第二场，开服第几天后，周几开第三场）从第四场开始，开启日期走周历表配置
	%% (3,7,9,6)
	%% 开服第3天开第一场，开服第7点开第二场，开服第9天后的周六开第三次
	%% -------------2023/1/10优化----------------
	%% 改为：（开服第几天第一场，开服第几天第二场，开服第几天第三场，开服第几天后，周几开第四场）从第五场开始，开启日期走周历表配置
	%% (3,6,9,12,7)
	%% 开服第3天开第一场，开服第6天开第二场，开服第9天开第三场，开服第12天后的周日开第四次，从第五场开始，开启日期走周历表配置
	specialOpen,
	%% (准备时间,初始状态时间,攻防状态时间)
	%% 秒
	times,
	%% 占领龙柱分（计入战盟）
	%% 占领一个龙柱后 战盟获得的龙柱分
	%% （序号，龙柱分）
	%% 序号：对应龙柱位置序号
	%% 可以双方战盟来回占领
	dragonPillarScore,
	%% 占领龙柱一次性给战盟的积分（计入战盟）
	%% 占领一个龙柱后 战盟获得的战盟积分
	%% （序号，积分）
	%% 序号：对应龙柱位置序号
	%% 可以双方战盟来回占领
	points1,
	%% 占领龙柱后按时间给的积分（计入战盟）
	%% （序号，积分,时间秒）
	%% 序号：对应龙柱位置序号
	%% 可以双方战盟来回占领
	points2,
	%% 攻击龙柱和城门获得的积分（计入个人）
	%% 这里配置：单位伤害值
	%% 积分=玩家对建筑造成的伤害/单位伤害值，向上取整
	%% Points3/…/Points5字段：个人积分最后统计时，全部统计入战盟积分
	points3,
	%% 参与活动后，至少造成了1点伤害后开始计算（计入个人）
	%% （积分,时间秒）
	%% 只要参与活动的玩家，在地图内，都按照时间给积分
	%% (1,10):每10秒给1点积分
	points4,
	%% 击杀一个敌方玩家，个人获得的积分（计入个人）
	points5,
	%% 时间经验奖励
	%% 参加该玩法每间隔一段时间获得一次经验奖励
	%% (时间间隔，经验参数）
	%% 时间间隔：秒；
	%% 经验参数：获得经验=经验参数*玩家等级对应获得经验标准值
	%% 玩家等级对应获得经验标准值：配置在ExpDistribution表中StandardEXP字段中
	timeExp,
	%% 营地传送战斗区域的同地图传送阵配置。{营地ID,传送阵ID,传送阵刷出坐标X,传送阵刷出坐标Z}
	campingTeleport,
	%% 准备阶段结束后，在正式战斗阶段中需要取消的动态阻挡的地图ID。注，这里配置的不是配置表上的ID，而是动态阻挡和NPC在地图文件中的唯一ID
	campingBlocker,
	%% 城门的怪物ID(配置表ID），城门及关联的动态阻挡ID（地图文件ID非配置表ID）（，城门及关联的动态阻挡ID（地图文件ID非配置表ID），传送阵ID（配置表ID非地图文件ID）。按照下-中-上顺序配置。
	doorID,
	%% 城门怪物属性参数(依次找到符合要求的配置)
	%% 格式：
	%% (序号,优先级,怪物类型,区分序号,等级方式,等级参数,属性列,特殊情况)
	%% 序号：无实际意义
	%% 优先级：无实际意义
	%% 怪物类型：0为全部,1为小怪,2为精英
	%% 区分序号：区分同类怪物；0为全部,大于0为区分序号
	%% 等级方式：确定怪物等级获取方式
	%% 0为固定,怪物等级='等级参数'
	%% 1为等同玩家等级,
	%% 怪物等级=（玩家等级/'等级参数'）{向下取整}*'等级参数'
	%% 2为世界等级,怪物等级=max(世界等级,等级参数)；3为传输等级
	%% 属性列号：对应取第几种属性列
	%% 字段HpFold,AttrBase[MonsterAttr]
	%% 特殊情况：0为没有；1为按某玩家生成一份怪物'属性',其他玩家生成一份怪物'生命值'叠加到怪物上；2为组队进入副本中时，按照等级最高的玩家来对应生成怪物属性
	doorAttr,
	%% 城门刷出位置，按照下中上顺序读。{位置序号，城门ID}
	doorIDSet,
	%% 城门刷出位置，按照北南中顺序读。{位置序号，X坐标，z坐标，朝向}
	doorSet,
	%% 修城门位置{位置序号，空采集物ID,X坐标，z坐标，朝向}
	doorRepair,
	%% 龙柱怪物属性参数(依次找到符合要求的配置)
	%% 格式：
	%% (序号,优先级,怪物类型,区分序号,等级方式,等级参数,属性列,特殊情况)
	%% 序号：无实际意义
	%% 优先级：无实际意义
	%% 怪物类型：0为全部,1为小怪,2为精英
	%% 区分序号：区分同类怪物；0为全部,大于0为区分序号
	%% 等级方式：确定怪物等级获取方式
	%% 0为固定,怪物等级='等级参数'
	%% 1为等同玩家等级,
	%% 怪物等级=（玩家等级/'等级参数'）{向下取整}*'等级参数'
	%% 2为世界等级,怪物等级=max(世界等级,等级参数)；3为传输等级
	%% 属性列号：对应取第几种属性列
	%% 字段HpFold,AttrBase[MonsterAttr]
	%% 特殊情况：0为没有；1为按某玩家生成一份怪物'属性',其他玩家生成一份怪物'生命值'叠加到怪物上；2为组队进入副本中时，按照等级最高的玩家来对应生成怪物属性
	pillarAttr,
	%% 旗帜
	%% （位置序号，旗帜ID）
	%% 位置序号：1矮人工坊 2炼金工房 3法师塔
	%% 旗帜ID：怪物ID
	flagID,
	%% 旗帜
	%% （位置序号，x坐标，z坐标，朝向）
	%% 位置序号：1矮人工坊 2炼金工房 3法师塔 4奇美拉
	flagSeat,
	%% 序号1旗帜占领后buff
	%% （位置序号，BUFFID）
	flag1OffenseBuff,
	%% 序号2旗帜占领后BUFF球ID
	%% （位置序号，BUFFID）
	flag2OffenseBuff,
	%% 序号2BUFF球刷新地点
	%% （X，Z）
	flag2BuffPositin,
	%% 序号3旗帜
	%% （位置序号，传送阵ID）
	%% 该传送阵ID是地图动态元素表里的ID
	flag3OffenseBUFF,
	%% 旗帜与城门
	%% （城门序号，旗帜序号）|（城门序号，旗帜序号）|（城门序号，旗帜序号）|
	flagDoor,
	%% 矮人工坊怪物属性参数(依次找到符合要求的配置)
	%% 格式：
	%% (序号,优先级,怪物类型,区分序号,等级方式,等级参数,属性列,特殊情况)
	%% 序号：无实际意义
	%% 优先级：无实际意义
	%% 怪物类型：0为全部,1为小怪,2为精英
	%% 区分序号：区分同类怪物；0为全部,大于0为区分序号
	%% 等级方式：确定怪物等级获取方式
	%% 0为固定,怪物等级='等级参数'
	%% 1为等同玩家等级,
	%% 怪物等级=（玩家等级/'等级参数'）{向下取整}*'等级参数'
	%% 2为世界等级,怪物等级=max(世界等级,等级参数)；3为传输等级
	%% 属性列号：对应取第几种属性列
	%% 字段HpFold,AttrBase[MonsterAttr]
	%% 特殊情况：0为没有；1为按某玩家生成一份怪物'属性',其他玩家生成一份怪物'生命值'叠加到怪物上；2为组队进入副本中时，按照等级最高的玩家来对应生成怪物属性
	workshopAttr1,
	%% 炼金工房怪物属性参数(依次找到符合要求的配置)
	%% 格式：
	%% (序号,优先级,怪物类型,区分序号,等级方式,等级参数,属性列,特殊情况)
	%% 序号：无实际意义
	%% 优先级：无实际意义
	%% 怪物类型：0为全部,1为小怪,2为精英
	%% 区分序号：区分同类怪物；0为全部,大于0为区分序号
	%% 等级方式：确定怪物等级获取方式
	%% 0为固定,怪物等级='等级参数'
	%% 1为等同玩家等级,
	%% 怪物等级=（玩家等级/'等级参数'）{向下取整}*'等级参数'
	%% 2为世界等级,怪物等级=max(世界等级,等级参数)；3为传输等级
	%% 属性列号：对应取第几种属性列
	%% 字段HpFold,AttrBase[MonsterAttr]
	%% 特殊情况：0为没有；1为按某玩家生成一份怪物'属性',其他玩家生成一份怪物'生命值'叠加到怪物上；2为组队进入副本中时，按照等级最高的玩家来对应生成怪物属性
	workshopAttr2,
	%% 法师塔怪物属性参数(依次找到符合要求的配置)
	%% 格式：
	%% (序号,优先级,怪物类型,区分序号,等级方式,等级参数,属性列,特殊情况)
	%% 序号：无实际意义
	%% 优先级：无实际意义
	%% 怪物类型：0为全部,1为小怪,2为精英
	%% 区分序号：区分同类怪物；0为全部,大于0为区分序号
	%% 等级方式：确定怪物等级获取方式
	%% 0为固定,怪物等级='等级参数'
	%% 1为等同玩家等级,
	%% 怪物等级=（玩家等级/'等级参数'）{向下取整}*'等级参数'
	%% 2为世界等级,怪物等级=max(世界等级,等级参数)；3为传输等级
	%% 属性列号：对应取第几种属性列
	%% 字段HpFold,AttrBase[MonsterAttr]
	%% 特殊情况：0为没有；1为按某玩家生成一份怪物'属性',其他玩家生成一份怪物'生命值'叠加到怪物上；2为组队进入副本中时，按照等级最高的玩家来对应生成怪物属性
	workshopAttr3,
	%% 奇美拉巢怪物属性参数(依次找到符合要求的配置)
	%% 格式：
	%% (序号,优先级,怪物类型,区分序号,等级方式,等级参数,属性列,特殊情况)
	%% 序号：无实际意义
	%% 优先级：无实际意义
	%% 怪物类型：0为全部,1为小怪,2为精英
	%% 区分序号：区分同类怪物；0为全部,大于0为区分序号
	%% 等级方式：确定怪物等级获取方式
	%% 0为固定,怪物等级='等级参数'
	%% 1为等同玩家等级,
	%% 怪物等级=（玩家等级/'等级参数'）{向下取整}*'等级参数'
	%% 2为世界等级,怪物等级=max(世界等级,等级参数)；3为传输等级
	%% 属性列号：对应取第几种属性列
	%% 字段HpFold,AttrBase[MonsterAttr]
	%% 特殊情况：0为没有；1为按某玩家生成一份怪物'属性',其他玩家生成一份怪物'生命值'叠加到怪物上；2为组队进入副本中时，按照等级最高的玩家来对应生成怪物属性
	workshopAttr4,
	%% 城门修复时间：毫秒
	doorRepairTime,
	%% 奇美拉巢穴变身上限
	chimeraLimit,
	%% 矮人工坊占领后团队获得buffid
	workshopBuff1,
	%% 炼金工房占领后团队获得buffid
	workshopBuff2,
	%% 法师塔占领后团队获得buffid
	workshopBuff3,
	%% 奇美拉巢穴变身BUFF
	chimeraBuff,
	%% 作者:
	%% 战车
	%% （序号，战车ID，变身id）
	%% 序号：可选战车的序号，战车名ChariotName、描述ChariotDesc和图标用该序号区分
	%% 变身id：【TransformModel】ID
	chariot,
	%% 战车刷新位置（序号,X,Z,朝向）
	chariotPosition,
	%% 准备阶段结束后，在正式战斗阶段中需要隐藏的npc的地图ID。注，这里配置的不是配置表上的ID，而是动态阻挡和NPC在地图文件中的唯一ID
	campingNPC,
	%% S赛区公会会长称号奖励
	%% （公会名次，奖励称号ID，奖励称号道具ID）
	giveTitleID,
	%% 击杀判定条件
	%% 在敌方死亡前M秒内造成过伤害
	%% 定义为击杀
	%% 单位：秒
	killJudge
}).

-endif.
