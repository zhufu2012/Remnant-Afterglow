-ifndef(cfg_mapStage_hrl).
-define(cfg_mapStage_hrl, true).

-record(mapStageCfg, {
	%% 阶段ID
	iD,
	%% 阶段目标
	%% (目标类型,参数1,参数2)|(目标类型,参数1,参数2)
	%% 目标类型1=该地图指定怪物波数；此时：参数1=怪物波数；参数2=击杀时间限制毫秒(服务器地图刷怪不能用）
	%% 目标类型2=该地图的副本时间，本阶段开始时开始计时；此时：参数1=副本限时时间（毫秒）；参数2=无效参数
	%% 目标类型3=该地图死亡的指定ID怪物数量，阶段开始前死掉的也算；此时：参数1=怪物ID；参数2=怪物数量
	%% 目标类型4=该地图指定怪物波数；此时：参数1=怪物波数；参数2=击杀时间限制毫秒(服务器地图刷怪不能用），判断这波怪没有开始就算失败
	stageTarget,
	%% 接取目标阶段条件（单条件）
	%% (条件,参数)
	%% 条件1=刷出第N波怪时接取阶段目标,参数=具体波数
	%% 条件2=进入副本自动接取，参数=无含义0
	%% 条件3=指定ID阶段完成后接取，参数=阶段ID
	stageTargetGet,
	%% 目标完成触发
	%% (结果类型,参数,优先级增加数）
	%% 结果类型：1改变刷怪； 参数：改变的波数；
	%% 优先级增加数：初始优先级为1，配“1”表示加1级.
	%% (1,4,1)表示：完成前面的目标后，改变第4波怪的刷怪优先级，刷怪优先级+1级
	%% 结果类型：2改变刷怪； 参数：改变的波数；
	%% 优先级增加数：初始优先级为1，配“2”表示每成功1级优先级加1级.
	%% (2,4,1)表示：完成前面的目标后，每成功一个条件就给第4波优先级+1
	stageTargetSuccessTo,
	%% 目标失败触发
	%% (结果类型,参数,优先级增加数）
	%% 结果类型：1改变刷怪； 参数：改变的波数；
	%% 优先级增加数：初始优先级为1，配“1”表示加1级.
	stageTargetFailTo,
	%% 判断类型：
	%% 判断成功条件
	%% 1：全部成功才算成功
	%% 2：其中一个条件成功就算成功
	stageType
}).

-endif.
